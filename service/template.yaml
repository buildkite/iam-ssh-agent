AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  iam-ssh-agent backend

  API Gateway, Lambda functions and DynamoDB table to store permissions.

Parameters:
  AccountIds:
    Type: CommaDelimitedList
    Description: AWS AccountIds whose IAM entities should be allowed to access the API Gateway.
  SourceVpcIds:
    Type: CommaDelimitedList
    Description: AWS VPC IDs whose occupants should be allowed to access the API Gateway.
  EndpointConfiguration:
    Type: String
    AllowedValues:
      - REGIONAL
      - PRIVATE
    Default: REGIONAL
    Description: What kind of API Gateway do you want to create? REGIONAL can be accessed from anywhere including the public Internet (authenticated with IAM credentials), PRIVATE can be restricted to specific VPCs using AWS PrivateLink (additional costs apply).

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    Runtime: nodejs12.x
    Environment:
      Variables:
        KEY_PERMISSIONS_TABLE_NAME: !Ref ResourcePermissionTable
  Api:
    Auth:
      DefaultAuthorizer: AWS_IAM
      InvokeRole: NONE
      ResourcePolicy:
        AwsAccountWhitelist: !Ref AccountIds
        SourceVpcWhitelist: !Ref SourceVpcIds
    EndpointConfiguration: !Ref EndpointConfiguration

Resources:
  ListIdentitiesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ssh-agent-backend/
      Handler: ListIdentities.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ResourcePermissionTable
        - SSMParameterReadPolicy:
            ParameterName: "*/key.pub"
      Events:
        SSHAgentBackend:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /identities
            Method: get
  ListIdentitiesLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: ListIdentitiesFunction
    Properties:
      RetentionInDays: 1
      LogGroupName:
        !Sub
        - '/aws/lambda/${LambdaName}'
        - LambdaName: !Ref ListIdentitiesFunction
  GetSignatureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ssh-agent-backend/
      Handler: GetSignature.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ResourcePermissionTable
        - SSMParameterReadPolicy:
            ParameterName: "*/key*"
        - KMSDecryptPolicy:
            KeyId: aws/ssm
      Events:
        SSHAgentBackend:
          Type: Api
          Properties:
            Path: /signature
            Method: post
  GetSignatureLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GetSignatureFunction
    Properties:
      RetentionInDays: 1
      LogGroupName:
        !Sub
        - '/aws/lambda/${LambdaName}'
        - LambdaName: !Ref GetSignatureFunction
  ResourcePermissionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: IamEntityUniqueId
        Type: String

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage for SSH Agent Backend"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  PermissionsTable:
    Description: "DynamoDB table for IAM entity ssh key permissions"
    Value: !Ref ResourcePermissionTable
